
DIO_BY_MOSALAH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000037e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000037e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000003ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a3b  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000646  00000000  00000000  00000ea7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000723  00000000  00000000  000014ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  00001c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000395  00000000  00000000  00001cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000826  00000000  00000000  0000208d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000028b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
  64:	0c 94 93 01 	jmp	0x326	; 0x326 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_set_PORT_DIR>:

		}
		else
		 Local_u8ErrorState = STD_TYPES_NOK;
		return Local_u8ErrorState;
			}
  6c:	84 30       	cpi	r24, 0x04	; 4
  6e:	b0 f4       	brcc	.+44     	; 0x9c <DIO_set_PORT_DIR+0x30>
  70:	62 30       	cpi	r22, 0x02	; 2
  72:	b0 f4       	brcc	.+44     	; 0xa0 <DIO_set_PORT_DIR+0x34>
  74:	81 30       	cpi	r24, 0x01	; 1
  76:	49 f0       	breq	.+18     	; 0x8a <DIO_set_PORT_DIR+0x1e>
  78:	28 f0       	brcs	.+10     	; 0x84 <DIO_set_PORT_DIR+0x18>
  7a:	82 30       	cpi	r24, 0x02	; 2
  7c:	49 f0       	breq	.+18     	; 0x90 <DIO_set_PORT_DIR+0x24>
  7e:	83 30       	cpi	r24, 0x03	; 3
  80:	51 f0       	breq	.+20     	; 0x96 <DIO_set_PORT_DIR+0x2a>
  82:	10 c0       	rjmp	.+32     	; 0xa4 <DIO_set_PORT_DIR+0x38>
  84:	6a bb       	out	0x1a, r22	; 26
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	08 95       	ret
  8a:	67 bb       	out	0x17, r22	; 23
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	08 95       	ret
  90:	64 bb       	out	0x14, r22	; 20
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	08 95       	ret
  96:	61 bb       	out	0x11, r22	; 17
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	08 95       	ret
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	08 95       	ret
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	08 95       	ret
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	08 95       	ret

000000a8 <DIO_read_PIN>:

	u8 DIO_read_PIN(u8 portnum,u8 pinnum)
	{
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	1f 92       	push	r1
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
		u8 Local_u8ErrorState = STD_TYPES_OK;
        volatile u8 value=0;
  b2:	19 82       	std	Y+1, r1	; 0x01
		if (((portnum==PORTA)||(portnum==PORTB)||(portnum==PORTC)||(portnum==PORTD))&& (pinnum<=PIN7))
  b4:	84 30       	cpi	r24, 0x04	; 4
  b6:	08 f0       	brcs	.+2      	; 0xba <DIO_read_PIN+0x12>
  b8:	64 c0       	rjmp	.+200    	; 0x182 <DIO_read_PIN+0xda>
  ba:	68 30       	cpi	r22, 0x08	; 8
  bc:	08 f0       	brcs	.+2      	; 0xc0 <DIO_read_PIN+0x18>
  be:	63 c0       	rjmp	.+198    	; 0x186 <DIO_read_PIN+0xde>
		{


			switch(portnum)
  c0:	81 30       	cpi	r24, 0x01	; 1
  c2:	e9 f0       	breq	.+58     	; 0xfe <DIO_read_PIN+0x56>
  c4:	30 f0       	brcs	.+12     	; 0xd2 <DIO_read_PIN+0x2a>
  c6:	82 30       	cpi	r24, 0x02	; 2
  c8:	81 f1       	breq	.+96     	; 0x12a <DIO_read_PIN+0x82>
  ca:	83 30       	cpi	r24, 0x03	; 3
  cc:	09 f4       	brne	.+2      	; 0xd0 <DIO_read_PIN+0x28>
  ce:	43 c0       	rjmp	.+134    	; 0x156 <DIO_read_PIN+0xae>
  d0:	5c c0       	rjmp	.+184    	; 0x18a <DIO_read_PIN+0xe2>
			{
				case PORTA:	value= READ_BIT(PINA_REG,pinnum);
  d2:	49 b3       	in	r20, 0x19	; 25
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	9c 01       	movw	r18, r24
  da:	06 2e       	mov	r0, r22
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_read_PIN+0x3a>
  de:	22 0f       	add	r18, r18
  e0:	33 1f       	adc	r19, r19
  e2:	0a 94       	dec	r0
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_read_PIN+0x36>
  e6:	84 2f       	mov	r24, r20
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	82 23       	and	r24, r18
  ec:	93 23       	and	r25, r19
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_read_PIN+0x4c>
  f0:	95 95       	asr	r25
  f2:	87 95       	ror	r24
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_read_PIN+0x48>
  f8:	89 83       	std	Y+1, r24	; 0x01
		return Local_u8ErrorState;
			}

	u8 DIO_read_PIN(u8 portnum,u8 pinnum)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
  fa:	81 e0       	ldi	r24, 0x01	; 1


			switch(portnum)
			{
				case PORTA:	value= READ_BIT(PINA_REG,pinnum);
				break;
  fc:	47 c0       	rjmp	.+142    	; 0x18c <DIO_read_PIN+0xe4>

				case PORTB:	value= READ_BIT(PINB_REG,pinnum);
  fe:	46 b3       	in	r20, 0x16	; 22
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	9c 01       	movw	r18, r24
 106:	06 2e       	mov	r0, r22
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_read_PIN+0x66>
 10a:	22 0f       	add	r18, r18
 10c:	33 1f       	adc	r19, r19
 10e:	0a 94       	dec	r0
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_read_PIN+0x62>
 112:	84 2f       	mov	r24, r20
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	82 23       	and	r24, r18
 118:	93 23       	and	r25, r19
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_read_PIN+0x78>
 11c:	95 95       	asr	r25
 11e:	87 95       	ror	r24
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_read_PIN+0x74>
 124:	89 83       	std	Y+1, r24	; 0x01
		return Local_u8ErrorState;
			}

	u8 DIO_read_PIN(u8 portnum,u8 pinnum)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 126:	81 e0       	ldi	r24, 0x01	; 1
			{
				case PORTA:	value= READ_BIT(PINA_REG,pinnum);
				break;

				case PORTB:	value= READ_BIT(PINB_REG,pinnum);
				break;
 128:	31 c0       	rjmp	.+98     	; 0x18c <DIO_read_PIN+0xe4>

				case PORTC:	value= READ_BIT(PINC_REG,pinnum);
 12a:	43 b3       	in	r20, 0x13	; 19
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	9c 01       	movw	r18, r24
 132:	06 2e       	mov	r0, r22
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_read_PIN+0x92>
 136:	22 0f       	add	r18, r18
 138:	33 1f       	adc	r19, r19
 13a:	0a 94       	dec	r0
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_read_PIN+0x8e>
 13e:	84 2f       	mov	r24, r20
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	82 23       	and	r24, r18
 144:	93 23       	and	r25, r19
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_read_PIN+0xa4>
 148:	95 95       	asr	r25
 14a:	87 95       	ror	r24
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_read_PIN+0xa0>
 150:	89 83       	std	Y+1, r24	; 0x01
		return Local_u8ErrorState;
			}

	u8 DIO_read_PIN(u8 portnum,u8 pinnum)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 152:	81 e0       	ldi	r24, 0x01	; 1

				case PORTB:	value= READ_BIT(PINB_REG,pinnum);
				break;

				case PORTC:	value= READ_BIT(PINC_REG,pinnum);
				break;
 154:	1b c0       	rjmp	.+54     	; 0x18c <DIO_read_PIN+0xe4>

				case PORTD:	value= READ_BIT(PIND_REG,pinnum);
 156:	40 b3       	in	r20, 0x10	; 16
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	9c 01       	movw	r18, r24
 15e:	06 2e       	mov	r0, r22
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_read_PIN+0xbe>
 162:	22 0f       	add	r18, r18
 164:	33 1f       	adc	r19, r19
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_read_PIN+0xba>
 16a:	84 2f       	mov	r24, r20
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	82 23       	and	r24, r18
 170:	93 23       	and	r25, r19
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_read_PIN+0xd0>
 174:	95 95       	asr	r25
 176:	87 95       	ror	r24
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_read_PIN+0xcc>
 17c:	89 83       	std	Y+1, r24	; 0x01
		return Local_u8ErrorState;
			}

	u8 DIO_read_PIN(u8 portnum,u8 pinnum)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 17e:	81 e0       	ldi	r24, 0x01	; 1

				case PORTC:	value= READ_BIT(PINC_REG,pinnum);
				break;

				case PORTD:	value= READ_BIT(PIND_REG,pinnum);
				break;
 180:	05 c0       	rjmp	.+10     	; 0x18c <DIO_read_PIN+0xe4>
				default: Local_u8ErrorState = STD_TYPES_NOK;break;
			}

		}
		else
		 Local_u8ErrorState = STD_TYPES_NOK;
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	03 c0       	rjmp	.+6      	; 0x18c <DIO_read_PIN+0xe4>
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	01 c0       	rjmp	.+2      	; 0x18c <DIO_read_PIN+0xe4>
				break;

				case PORTD:	value= READ_BIT(PIND_REG,pinnum);
				break;

				default: Local_u8ErrorState = STD_TYPES_NOK;break;
 18a:	80 e0       	ldi	r24, 0x00	; 0
			}

		}
		else
		 Local_u8ErrorState = STD_TYPES_NOK;
		return value,Local_u8ErrorState;
 18c:	99 81       	ldd	r25, Y+1	; 0x01
	}
 18e:	0f 90       	pop	r0
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <DIO_write_PIN>:

	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;

		if (((portnum==PORTA)||(portnum==PORTB)||(portnum==PORTC)||(portnum==PORTD))&& (pinnum<=PIN7)&&((value==HIGH)||(value==LOW)))
 196:	84 30       	cpi	r24, 0x04	; 4
 198:	08 f0       	brcs	.+2      	; 0x19c <DIO_write_PIN+0x6>
 19a:	7b c0       	rjmp	.+246    	; 0x292 <DIO_write_PIN+0xfc>
 19c:	68 30       	cpi	r22, 0x08	; 8
 19e:	08 f0       	brcs	.+2      	; 0x1a2 <DIO_write_PIN+0xc>
 1a0:	7a c0       	rjmp	.+244    	; 0x296 <DIO_write_PIN+0x100>
 1a2:	42 30       	cpi	r20, 0x02	; 2
 1a4:	08 f0       	brcs	.+2      	; 0x1a8 <DIO_write_PIN+0x12>
 1a6:	79 c0       	rjmp	.+242    	; 0x29a <DIO_write_PIN+0x104>
		{
			switch(portnum)
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	11 f1       	breq	.+68     	; 0x1f0 <DIO_write_PIN+0x5a>
 1ac:	30 f0       	brcs	.+12     	; 0x1ba <DIO_write_PIN+0x24>
 1ae:	82 30       	cpi	r24, 0x02	; 2
 1b0:	d1 f1       	breq	.+116    	; 0x226 <DIO_write_PIN+0x90>
 1b2:	83 30       	cpi	r24, 0x03	; 3
 1b4:	09 f4       	brne	.+2      	; 0x1b8 <DIO_write_PIN+0x22>
 1b6:	52 c0       	rjmp	.+164    	; 0x25c <DIO_write_PIN+0xc6>
 1b8:	72 c0       	rjmp	.+228    	; 0x29e <DIO_write_PIN+0x108>
			{
				case PORTA:
				if (value==HIGH){ SET_BIT(PORTA_REG,pinnum);}
 1ba:	41 30       	cpi	r20, 0x01	; 1
 1bc:	61 f4       	brne	.+24     	; 0x1d6 <DIO_write_PIN+0x40>
 1be:	2b b3       	in	r18, 0x1b	; 27
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_write_PIN+0x34>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	6a 95       	dec	r22
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_write_PIN+0x30>
 1ce:	82 2b       	or	r24, r18
 1d0:	8b bb       	out	0x1b, r24	; 27
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	08 95       	ret
		{
			switch(portnum)
			{
				case PORTA:
				if (value==HIGH){ SET_BIT(PORTA_REG,pinnum);}
				else {CLR_BIT(PORTA_REG,pinnum);}
 1d6:	2b b3       	in	r18, 0x1b	; 27
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_write_PIN+0x4c>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_write_PIN+0x48>
 1e6:	80 95       	com	r24
 1e8:	82 23       	and	r24, r18
 1ea:	8b bb       	out	0x1b, r24	; 27
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	08 95       	ret
				if (value==HIGH){ SET_BIT(PORTA_REG,pinnum);}
				else {CLR_BIT(PORTA_REG,pinnum);}
				break;

				case PORTB:
				if (value==HIGH){ SET_BIT(PORTB_REG,pinnum);}
 1f0:	41 30       	cpi	r20, 0x01	; 1
 1f2:	61 f4       	brne	.+24     	; 0x20c <DIO_write_PIN+0x76>
 1f4:	28 b3       	in	r18, 0x18	; 24
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_write_PIN+0x6a>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_write_PIN+0x66>
 204:	82 2b       	or	r24, r18
 206:	88 bb       	out	0x18, r24	; 24
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	08 95       	ret
				else {CLR_BIT(PORTA_REG,pinnum);}
				break;

				case PORTB:
				if (value==HIGH){ SET_BIT(PORTB_REG,pinnum);}
				else {CLR_BIT(PORTB_REG,pinnum);}
 20c:	28 b3       	in	r18, 0x18	; 24
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_write_PIN+0x82>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_write_PIN+0x7e>
 21c:	80 95       	com	r24
 21e:	82 23       	and	r24, r18
 220:	88 bb       	out	0x18, r24	; 24
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	08 95       	ret
				if (value==HIGH){ SET_BIT(PORTB_REG,pinnum);}
				else {CLR_BIT(PORTB_REG,pinnum);}
				break;

				case PORTC:
				if (value==HIGH){ SET_BIT(PORTC_REG,pinnum);}
 226:	41 30       	cpi	r20, 0x01	; 1
 228:	61 f4       	brne	.+24     	; 0x242 <DIO_write_PIN+0xac>
 22a:	25 b3       	in	r18, 0x15	; 21
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_write_PIN+0xa0>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_write_PIN+0x9c>
 23a:	82 2b       	or	r24, r18
 23c:	85 bb       	out	0x15, r24	; 21
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	08 95       	ret
				else {CLR_BIT(PORTB_REG,pinnum);}
				break;

				case PORTC:
				if (value==HIGH){ SET_BIT(PORTC_REG,pinnum);}
				else {CLR_BIT(PORTC_REG,pinnum);}
 242:	25 b3       	in	r18, 0x15	; 21
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_write_PIN+0xb8>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_write_PIN+0xb4>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	85 bb       	out	0x15, r24	; 21
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	08 95       	ret
				if (value==HIGH){ SET_BIT(PORTC_REG,pinnum);}
				else {CLR_BIT(PORTC_REG,pinnum);}
				break;

				case PORTD:
				if (value==HIGH){ SET_BIT(PORTD_REG,pinnum);}
 25c:	41 30       	cpi	r20, 0x01	; 1
 25e:	61 f4       	brne	.+24     	; 0x278 <DIO_write_PIN+0xe2>
 260:	22 b3       	in	r18, 0x12	; 18
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_write_PIN+0xd6>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_write_PIN+0xd2>
 270:	82 2b       	or	r24, r18
 272:	82 bb       	out	0x12, r24	; 18
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	08 95       	ret
				else {CLR_BIT(PORTC_REG,pinnum);}
				break;

				case PORTD:
				if (value==HIGH){ SET_BIT(PORTD_REG,pinnum);}
				else {CLR_BIT(PORTD_REG,pinnum);}
 278:	22 b3       	in	r18, 0x12	; 18
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_write_PIN+0xee>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_write_PIN+0xea>
 288:	80 95       	com	r24
 28a:	82 23       	and	r24, r18
 28c:	82 bb       	out	0x12, r24	; 18
	}


	u8 DIO_write_PIN(u8 portnum,u8 pinnum,u8 value)
	{
		u8 Local_u8ErrorState = STD_TYPES_OK;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	08 95       	ret
				default: Local_u8ErrorState = STD_TYPES_NOK;break;
			}

		}
		else
		 Local_u8ErrorState = STD_TYPES_NOK;
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	08 95       	ret
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	08 95       	ret
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	08 95       	ret
				case PORTD:
				if (value==HIGH){ SET_BIT(PORTD_REG,pinnum);}
				else {CLR_BIT(PORTD_REG,pinnum);}
				break;

				default: Local_u8ErrorState = STD_TYPES_NOK;break;
 29e:	80 e0       	ldi	r24, 0x00	; 0

		}
		else
		 Local_u8ErrorState = STD_TYPES_NOK;
		return Local_u8ErrorState;
	}
 2a0:	08 95       	ret

000002a2 <main>:
#include "STD_TYPES.h"


int main(void){
	void DIO_voidInit();
	DIO_set_PORT_DIR(B,INPUT);
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_set_PORT_DIR>
	DIO_set_PORT_DIR(D,OUTPUT);
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	83 e0       	ldi	r24, 0x03	; 3
 2ae:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_set_PORT_DIR>
	while(1){
		
		u8 val=DIO_read_PIN(B,1);
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 54 00 	call	0xa8	; 0xa8 <DIO_read_PIN>
		if (val==HIGH)
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	d1 f4       	brne	.+52     	; 0x2f2 <main+0x50>
		{
			DIO_write_PIN(D,0,HIGH);
 2be:	41 e0       	ldi	r20, 0x01	; 1
 2c0:	60 e0       	ldi	r22, 0x00	; 0
 2c2:	83 e0       	ldi	r24, 0x03	; 3
 2c4:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
			DIO_write_PIN(D,1,LOW);
 2c8:	40 e0       	ldi	r20, 0x00	; 0
 2ca:	61 e0       	ldi	r22, 0x01	; 1
 2cc:	83 e0       	ldi	r24, 0x03	; 3
 2ce:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
			DIO_write_PIN(D,2,HIGH);
 2d2:	41 e0       	ldi	r20, 0x01	; 1
 2d4:	62 e0       	ldi	r22, 0x02	; 2
 2d6:	83 e0       	ldi	r24, 0x03	; 3
 2d8:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
			DIO_write_PIN(D,3,LOW);
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	63 e0       	ldi	r22, 0x03	; 3
 2e0:	83 e0       	ldi	r24, 0x03	; 3
 2e2:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
			DIO_write_PIN(D,4,HIGH);
 2e6:	41 e0       	ldi	r20, 0x01	; 1
 2e8:	64 e0       	ldi	r22, 0x04	; 4
 2ea:	83 e0       	ldi	r24, 0x03	; 3
 2ec:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
 2f0:	e0 cf       	rjmp	.-64     	; 0x2b2 <main+0x10>
		}
		else{
		DIO_write_PIN(D,0,LOW);
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	83 e0       	ldi	r24, 0x03	; 3
 2f8:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
		DIO_write_PIN(D,1,HIGH);
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	61 e0       	ldi	r22, 0x01	; 1
 300:	83 e0       	ldi	r24, 0x03	; 3
 302:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
		DIO_write_PIN(D,2,LOW);
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	62 e0       	ldi	r22, 0x02	; 2
 30a:	83 e0       	ldi	r24, 0x03	; 3
 30c:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
		DIO_write_PIN(D,3,HIGH);
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	63 e0       	ldi	r22, 0x03	; 3
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
		DIO_write_PIN(D,4,LOW);}
 31a:	40 e0       	ldi	r20, 0x00	; 0
 31c:	64 e0       	ldi	r22, 0x04	; 4
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_write_PIN>
 324:	c6 cf       	rjmp	.-116    	; 0x2b2 <main+0x10>

00000326 <_exit>:
 326:	f8 94       	cli

00000328 <__stop_program>:
 328:	ff cf       	rjmp	.-2      	; 0x328 <__stop_program>
